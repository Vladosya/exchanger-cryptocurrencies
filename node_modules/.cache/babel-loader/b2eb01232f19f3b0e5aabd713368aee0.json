{"ast":null,"code":"import _regeneratorRuntime from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport currencyService from \"../services/CurrencyService\";\nexport default {\n  state: {\n    cryptosExchange: []\n  },\n  getters: {\n    cryptosExchange: function cryptosExchange(state) {\n      return state.cryptos;\n    }\n  },\n  mutations: {\n    ADD_CRYPTO: function ADD_CRYPTO(state, payload) {\n      state.cryptos = payload;\n    }\n  },\n  actions: {\n    getCryptoCurrenciesExchange: function getCryptoCurrenciesExchange(_ref) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit, _yield$currencyServic, data;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return currencyService.getCurrency();\n\n              case 3:\n                _yield$currencyServic = _context.sent;\n                data = _yield$currencyServic.data;\n\n                if (!(data.status === 200)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", data.result.sort(function (a, b) {\n                  return a.id - b.id;\n                }));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["currencyService","state","cryptosExchange","getters","cryptos","mutations","ADD_CRYPTO","payload","actions","getCryptoCurrenciesExchange","commit","getCurrency","data","status","result","sort","a","b","id"],"sources":["C:/Job/work/365-change/frontend/src/store/exchange.js"],"sourcesContent":["import currencyService from \"../services/CurrencyService\";\r\n\r\nexport default {\r\n  state: {\r\n    cryptosExchange: [],\r\n  },\r\n  getters: {\r\n    cryptosExchange(state) {\r\n      return state.cryptos;\r\n    },\r\n  },\r\n  mutations: {\r\n    ADD_CRYPTO(state, payload) {\r\n      state.cryptos = payload;\r\n    },\r\n  },\r\n  actions: {\r\n    async getCryptoCurrenciesExchange({ commit }) {\r\n      const { data } = await currencyService.getCurrency();\r\n      if (data.status === 200) {\r\n        return data.result.sort((a, b) => {\r\n          return a.id - b.id;\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,eAAP,MAA4B,6BAA5B;AAEA,eAAe;EACbC,KAAK,EAAE;IACLC,eAAe,EAAE;EADZ,CADM;EAIbC,OAAO,EAAE;IACPD,eADO,2BACSD,KADT,EACgB;MACrB,OAAOA,KAAK,CAACG,OAAb;IACD;EAHM,CAJI;EASbC,SAAS,EAAE;IACTC,UADS,sBACEL,KADF,EACSM,OADT,EACkB;MACzBN,KAAK,CAACG,OAAN,GAAgBG,OAAhB;IACD;EAHQ,CATE;EAcbC,OAAO,EAAE;IACDC,2BADC,6CACuC;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAVC,MAAU,QAAVA,MAAU;gBAAA;gBAAA,OACrBV,eAAe,CAACW,WAAhB,EADqB;;cAAA;gBAAA;gBACpCC,IADoC,yBACpCA,IADoC;;gBAAA,MAExCA,IAAI,CAACC,MAAL,KAAgB,GAFwB;kBAAA;kBAAA;gBAAA;;gBAAA,iCAGnCD,IAAI,CAACE,MAAL,CAAYC,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ,EAAU;kBAChC,OAAOD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAhB;gBACD,CAFM,CAHmC;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAO7C;EARM;AAdI,CAAf"},"metadata":{},"sourceType":"module"}