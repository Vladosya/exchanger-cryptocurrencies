{"ast":null,"code":"import _regeneratorRuntime from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport authService from \"@/services/AuthService\";\nimport $api from \"@/http/index\";\nexport default {\n  state: {\n    isAuth: false\n  },\n  getters: {},\n  mutations: {\n    CHANGE_IS_AUTH: function CHANGE_IS_AUTH(state, payload) {\n      state.isAuth = payload;\n    }\n  },\n  actions: {\n    checkAuthorization: function checkAuthorization(_ref) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return $api.post(\"\");\n\n              case 3:\n                commit(\"CHANGE_IS_AUTH\", true);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    authorization: function authorization(_ref2, formData) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var commit, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref2.commit;\n                _context2.next = 3;\n                return authService.login(formData);\n\n              case 3:\n                response = _context2.sent;\n\n                if (!(response.data.status === 200)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                console.log(\"response.data\", response.data);\n                localStorage.setItem(\"token\", response.data.result.accessToken);\n                commit(\"CHANGE_IS_AUTH\", true);\n                return _context2.abrupt(\"return\", {\n                  message: response.data.message\n                });\n\n              case 11:\n                if (!(response.data.status === 400)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", {\n                  message: response.data.message\n                });\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["authService","$api","state","isAuth","getters","mutations","CHANGE_IS_AUTH","payload","actions","checkAuthorization","commit","post","authorization","formData","login","response","data","status","console","log","localStorage","setItem","result","accessToken","message"],"sources":["C:/Job/work/365-change/frontend/src/store/authorization.js"],"sourcesContent":["import authService from \"@/services/AuthService\";\r\nimport $api from \"@/http/index\";\r\n\r\nexport default {\r\n  state: {\r\n    isAuth: false,\r\n  },\r\n  getters: {},\r\n  mutations: {\r\n    CHANGE_IS_AUTH(state, payload) {\r\n      state.isAuth = payload;\r\n    },\r\n  },\r\n  actions: {\r\n    async checkAuthorization({ commit }) {\r\n      await $api.post(\"\");\r\n      commit(\"CHANGE_IS_AUTH\", true);\r\n    },\r\n    async authorization({ commit }, formData) {\r\n      const response = await authService.login(formData);\r\n      if (response.data.status === 200) {\r\n        console.log(\"response.data\", response.data);\r\n        localStorage.setItem(\"token\", response.data.result.accessToken);\r\n        commit(\"CHANGE_IS_AUTH\", true);\r\n        return {\r\n          message: response.data.message,\r\n        };\r\n      } else if (response.data.status === 400) {\r\n        return {\r\n          message: response.data.message,\r\n        };\r\n      }\r\n    },\r\n  },\r\n};\r\n"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,wBAAxB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,eAAe;EACbC,KAAK,EAAE;IACLC,MAAM,EAAE;EADH,CADM;EAIbC,OAAO,EAAE,EAJI;EAKbC,SAAS,EAAE;IACTC,cADS,0BACMJ,KADN,EACaK,OADb,EACsB;MAC7BL,KAAK,CAACC,MAAN,GAAeI,OAAf;IACD;EAHQ,CALE;EAUbC,OAAO,EAAE;IACDC,kBADC,oCAC8B;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAVC,MAAU,QAAVA,MAAU;gBAAA;gBAAA,OAC7BT,IAAI,CAACU,IAAL,CAAU,EAAV,CAD6B;;cAAA;gBAEnCD,MAAM,CAAC,gBAAD,EAAmB,IAAnB,CAAN;;cAFmC;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGpC,CAJM;IAKDE,aALC,gCAKyBC,QALzB,EAKmC;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAApBH,MAAoB,SAApBA,MAAoB;gBAAA;gBAAA,OACjBV,WAAW,CAACc,KAAZ,CAAkBD,QAAlB,CADiB;;cAAA;gBAClCE,QADkC;;gBAAA,MAEpCA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,GAFW;kBAAA;kBAAA;gBAAA;;gBAGtCC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,QAAQ,CAACC,IAAtC;gBACAI,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,QAAQ,CAACC,IAAT,CAAcM,MAAd,CAAqBC,WAAnD;gBACAb,MAAM,CAAC,gBAAD,EAAmB,IAAnB,CAAN;gBALsC,kCAM/B;kBACLc,OAAO,EAAET,QAAQ,CAACC,IAAT,CAAcQ;gBADlB,CAN+B;;cAAA;gBAAA,MAS7BT,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,GATI;kBAAA;kBAAA;gBAAA;;gBAAA,kCAU/B;kBACLO,OAAO,EAAET,QAAQ,CAACC,IAAT,CAAcQ;gBADlB,CAV+B;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAczC;EAnBM;AAVI,CAAf"},"metadata":{},"sourceType":"module"}