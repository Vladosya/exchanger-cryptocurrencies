{"ast":null,"code":"import _regeneratorRuntime from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    cryptos: []\n  },\n  getters: {\n    cryptos: function cryptos(state) {\n      return state.cryptos;\n    }\n  },\n  mutations: {\n    ADD_CRYPTO: function ADD_CRYPTO(state, payload) {\n      state.cryptos = payload;\n    }\n  },\n  actions: {\n    getCryptoCurrencies: function getCryptoCurrencies(_ref) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit, _yield$axios$get, data, countDigits, a;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return axios.get(\"http://localhost:5000/api-v1/currency\");\n\n              case 3:\n                _yield$axios$get = _context.sent;\n                data = _yield$axios$get.data;\n\n                if (!(data.status === 200)) {\n                  _context.next = 15;\n                  break;\n                }\n\n                commit(\"ADD_CRYPTO\", data.result.sort(function (a, b) {\n                  return a.id - b.id;\n                }));\n\n                countDigits = function countDigits(n) {\n                  for (var i = 0; n > 1; i++) {\n                    n /= 10;\n                  }\n\n                  return i;\n                };\n\n                console.log(\"data.result[14]\", data.result[14]);\n                a = data.result[14].quote_currency[\"RUB\"][\"BTC\"].toString();\n                console.log(\"a\", a);\n                console.log(\"a length\", a.length);\n                localStorage.setItem(\"cryptosAll\", JSON.stringify(data.result));\n                localStorage.setItem(\"selectCurrency\", JSON.stringify(\"Bitcoin BTC\"));\n                return _context.abrupt(\"return\", data.result);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","axios","use","Store","state","cryptos","getters","mutations","ADD_CRYPTO","payload","actions","getCryptoCurrencies","commit","get","data","status","result","sort","a","b","id","countDigits","n","i","console","log","quote_currency","toString","length","localStorage","setItem","JSON","stringify","modules"],"sources":["C:/Job/work/365-change/frontend/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    cryptos: [],\n  },\n  getters: {\n    cryptos(state) {\n      return state.cryptos;\n    },\n  },\n  mutations: {\n    ADD_CRYPTO(state, payload) {\n      state.cryptos = payload;\n    },\n  },\n  actions: {\n    async getCryptoCurrencies({ commit }) {\n      const { data } = await axios.get(\"http://localhost:5000/api-v1/currency\");\n      if (data.status === 200) {\n        commit(\n          \"ADD_CRYPTO\",\n          data.result.sort((a, b) => {\n            return a.id - b.id;\n          }),\n        );\n\n        const countDigits = (n) => {\n          for (var i = 0; n > 1; i++) {\n            n /= 10;\n          }\n          return i;\n        };\n\n        console.log(\"data.result[14]\", data.result[14]);\n\n        const a = data.result[14].quote_currency[\"RUB\"][\"BTC\"].toString();\n        console.log(\"a\", a);\n        console.log(\"a length\", a.length);\n        localStorage.setItem(\"cryptosAll\", JSON.stringify(data.result));\n        localStorage.setItem(\"selectCurrency\", JSON.stringify(\"Bitcoin BTC\"));\n        return data.result;\n      }\n    },\n  },\n  modules: {},\n});\n"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;EAC5BC,KAAK,EAAE;IACLC,OAAO,EAAE;EADJ,CADqB;EAI5BC,OAAO,EAAE;IACPD,OADO,mBACCD,KADD,EACQ;MACb,OAAOA,KAAK,CAACC,OAAb;IACD;EAHM,CAJmB;EAS5BE,SAAS,EAAE;IACTC,UADS,sBACEJ,KADF,EACSK,OADT,EACkB;MACzBL,KAAK,CAACC,OAAN,GAAgBI,OAAhB;IACD;EAHQ,CATiB;EAc5BC,OAAO,EAAE;IACDC,mBADC,qCAC+B;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAVC,MAAU,QAAVA,MAAU;gBAAA;gBAAA,OACbX,KAAK,CAACY,GAAN,CAAU,uCAAV,CADa;;cAAA;gBAAA;gBAC5BC,IAD4B,oBAC5BA,IAD4B;;gBAAA,MAEhCA,IAAI,CAACC,MAAL,KAAgB,GAFgB;kBAAA;kBAAA;gBAAA;;gBAGlCH,MAAM,CACJ,YADI,EAEJE,IAAI,CAACE,MAAL,CAAYC,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ,EAAU;kBACzB,OAAOD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAhB;gBACD,CAFD,CAFI,CAAN;;gBAOMC,WAV4B,GAUd,SAAdA,WAAc,CAACC,CAAD,EAAO;kBACzB,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBD,CAAC,GAAG,CAApB,EAAuBC,CAAC,EAAxB,EAA4B;oBAC1BD,CAAC,IAAI,EAAL;kBACD;;kBACD,OAAOC,CAAP;gBACD,CAfiC;;gBAiBlCC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BX,IAAI,CAACE,MAAL,CAAY,EAAZ,CAA/B;gBAEME,CAnB4B,GAmBxBJ,IAAI,CAACE,MAAL,CAAY,EAAZ,EAAgBU,cAAhB,CAA+B,KAA/B,EAAsC,KAAtC,EAA6CC,QAA7C,EAnBwB;gBAoBlCH,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBP,CAAjB;gBACAM,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,CAAC,CAACU,MAA1B;gBACAC,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAelB,IAAI,CAACE,MAApB,CAAnC;gBACAa,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCC,IAAI,CAACC,SAAL,CAAe,aAAf,CAAvC;gBAvBkC,iCAwB3BlB,IAAI,CAACE,MAxBsB;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IA0BrC;EA3BM,CAdmB;EA2C5BiB,OAAO,EAAE;AA3CmB,CAAf,CAAf"},"metadata":{},"sourceType":"module"}