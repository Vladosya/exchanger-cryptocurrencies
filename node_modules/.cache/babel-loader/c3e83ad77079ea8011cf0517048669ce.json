{"ast":null,"code":"import _regeneratorRuntime from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\"; // import axios from \"axios\";\n\nimport register from \"./register\";\nimport currencyService from \"../services/CurrencyService\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    cryptos: []\n  },\n  getters: {\n    cryptos: function cryptos(state) {\n      return state.cryptos;\n    }\n  },\n  mutations: {\n    ADD_CRYPTO: function ADD_CRYPTO(state, payload) {\n      state.cryptos = payload;\n    }\n  },\n  actions: {\n    getCryptoCurrencies: function getCryptoCurrencies() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return new currencyService.getCurrency();\n\n              case 2:\n                response = _context.sent;\n                console.log(\"response\", response); // if (data.status === 200) {\n                //   commit(\n                //     \"ADD_CRYPTO\",\n                //     data.result.sort((a, b) => {\n                //       return a.id - b.id;\n                //     }),\n                //   );\n                //   localStorage.setItem(\"cryptosAll\", JSON.stringify(data.result));\n                //   localStorage.setItem(\"selectCurrency\", JSON.stringify(\"Bitcoin BTC\"));\n                //   return data.result;\n                // }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  modules: {\n    register: register\n  }\n});","map":{"version":3,"names":["Vue","Vuex","register","currencyService","use","Store","state","cryptos","getters","mutations","ADD_CRYPTO","payload","actions","getCryptoCurrencies","getCurrency","response","console","log","modules"],"sources":["C:/Job/work/365-change/frontend/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n// import axios from \"axios\";\n\nimport register from \"./register\";\n\nimport currencyService from \"../services/CurrencyService\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    cryptos: [],\n  },\n  getters: {\n    cryptos(state) {\n      return state.cryptos;\n    },\n  },\n  mutations: {\n    ADD_CRYPTO(state, payload) {\n      state.cryptos = payload;\n    },\n  },\n  actions: {\n    async getCryptoCurrencies() {\n      const response = await new currencyService.getCurrency();\n      console.log(\"response\", response);\n      // if (data.status === 200) {\n      //   commit(\n      //     \"ADD_CRYPTO\",\n      //     data.result.sort((a, b) => {\n      //       return a.id - b.id;\n      //     }),\n      //   );\n      //   localStorage.setItem(\"cryptosAll\", JSON.stringify(data.result));\n      //   localStorage.setItem(\"selectCurrency\", JSON.stringify(\"Bitcoin BTC\"));\n      //   return data.result;\n      // }\n    },\n  },\n  modules: {\n    register,\n  },\n});\n"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,eAAP,MAA4B,6BAA5B;AAEAH,GAAG,CAACI,GAAJ,CAAQH,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACI,KAAT,CAAe;EAC5BC,KAAK,EAAE;IACLC,OAAO,EAAE;EADJ,CADqB;EAI5BC,OAAO,EAAE;IACPD,OADO,mBACCD,KADD,EACQ;MACb,OAAOA,KAAK,CAACC,OAAb;IACD;EAHM,CAJmB;EAS5BE,SAAS,EAAE;IACTC,UADS,sBACEJ,KADF,EACSK,OADT,EACkB;MACzBL,KAAK,CAACC,OAAN,GAAgBI,OAAhB;IACD;EAHQ,CATiB;EAc5BC,OAAO,EAAE;IACDC,mBADC,iCACqB;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACH,IAAIV,eAAe,CAACW,WAApB,EADG;;cAAA;gBACpBC,QADoB;gBAE1BC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB,EAF0B,CAG1B;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;;cAb0B;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAc3B;EAfM,CAdmB;EA+B5BG,OAAO,EAAE;IACPhB,QAAQ,EAARA;EADO;AA/BmB,CAAf,CAAf"},"metadata":{},"sourceType":"module"}