{"ast":null,"code":"import _regeneratorRuntime from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport reviewService from \"../services/ReviewService\";\nexport default {\n  state: {\n    reviews: []\n  },\n  getters: {},\n  mutations: {\n    ADD_REVIEW: function ADD_REVIEW(state, payload) {\n      state.reviews = payload;\n      console.log(\"state.reviews\", state.reviews);\n    }\n  },\n  actions: {\n    getReview: function getReview(_ref) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit, _yield$reviewService$, data;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return reviewService.getReview();\n\n              case 3:\n                _yield$reviewService$ = _context.sent;\n                data = _yield$reviewService$.data;\n\n                if (data.status === 200) {\n                  commit(\"ADD_REVIEW\", data.result.sort(function (a, b) {\n                    return a.id - b.id;\n                  }));\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["reviewService","state","reviews","getters","mutations","ADD_REVIEW","payload","console","log","actions","getReview","commit","data","status","result","sort","a","b","id"],"sources":["C:/Job/work/365-change/frontend/src/store/review.js"],"sourcesContent":["import reviewService from \"../services/ReviewService\";\r\n\r\nexport default {\r\n  state: {\r\n    reviews: [],\r\n  },\r\n  getters: {},\r\n  mutations: {\r\n    ADD_REVIEW(state, payload) {\r\n      state.reviews = payload;\r\n      console.log(\"state.reviews\", state.reviews);\r\n    },\r\n  },\r\n  actions: {\r\n    async getReview({ commit }) {\r\n      const { data } = await reviewService.getReview();\r\n      if (data.status === 200) {\r\n        commit(\r\n          \"ADD_REVIEW\",\r\n          data.result.sort((a, b) => {\r\n            return a.id - b.id;\r\n          }),\r\n        );\r\n      }\r\n    },\r\n  },\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,2BAA1B;AAEA,eAAe;EACbC,KAAK,EAAE;IACLC,OAAO,EAAE;EADJ,CADM;EAIbC,OAAO,EAAE,EAJI;EAKbC,SAAS,EAAE;IACTC,UADS,sBACEJ,KADF,EACSK,OADT,EACkB;MACzBL,KAAK,CAACC,OAAN,GAAgBI,OAAhB;MACAC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,KAAK,CAACC,OAAnC;IACD;EAJQ,CALE;EAWbO,OAAO,EAAE;IACDC,SADC,2BACqB;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAVC,MAAU,QAAVA,MAAU;gBAAA;gBAAA,OACHX,aAAa,CAACU,SAAd,EADG;;cAAA;gBAAA;gBAClBE,IADkB,yBAClBA,IADkB;;gBAE1B,IAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;kBACvBF,MAAM,CACJ,YADI,EAEJC,IAAI,CAACE,MAAL,CAAYC,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ,EAAU;oBACzB,OAAOD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAhB;kBACD,CAFD,CAFI,CAAN;gBAMD;;cATyB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAU3B;EAXM;AAXI,CAAf"},"metadata":{},"sourceType":"module"}