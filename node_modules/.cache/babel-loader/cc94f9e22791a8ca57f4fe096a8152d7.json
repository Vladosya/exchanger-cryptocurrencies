{"ast":null,"code":"import _regeneratorRuntime from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    cryptos: [],\n    cryptoValues: []\n  },\n  getters: {\n    cryptos: function cryptos(state) {\n      return state.cryptos;\n    }\n  },\n  mutations: {\n    ADD_CRYPTO: function ADD_CRYPTO(state, payload) {\n      state.cryptos = payload;\n    },\n    ADD_CRYPTO_VALUES: function ADD_CRYPTO_VALUES(state, payload) {\n      state.cryptoValues = payload;\n    }\n  },\n  actions: {\n    getCryptoCurrencies: function getCryptoCurrencies(_ref) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit, _yield$axios$get, data;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return axios.get(\"http://localhost:8080/api-v1/currency\");\n\n              case 3:\n                _yield$axios$get = _context.sent;\n                data = _yield$axios$get.data;\n                console.log(\"data\", data);\n\n                if (!(data.status === 200)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                commit(\"ADD_CRYPTO\", data.result);\n                localStorage.setItem(\"cryptosAll\", JSON.stringify(data.result));\n                localStorage.setItem(\"selectCurrency\", JSON.stringify(\"Bitcoin BTC\"));\n                return _context.abrupt(\"return\", data.result);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getCryptocurrenciesValues: function getCryptocurrenciesValues(_ref2) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var commit, _yield$axios$get2, data;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref2.commit;\n                _context2.next = 3;\n                return axios.get(\"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,USDT,USDC,RUB&tsyms=USD,RUB,BTC,USDT,USDC\");\n\n              case 3:\n                _yield$axios$get2 = _context2.sent;\n                data = _yield$axios$get2.data;\n                commit(\"ADD_CRYPTO_VALUES\", data);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","axios","use","Store","state","cryptos","cryptoValues","getters","mutations","ADD_CRYPTO","payload","ADD_CRYPTO_VALUES","actions","getCryptoCurrencies","commit","get","data","console","log","status","result","localStorage","setItem","JSON","stringify","getCryptocurrenciesValues","modules"],"sources":["C:/Job/work/365-change/frontend/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nimport axios from \"axios\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    cryptos: [],\n    cryptoValues: [],\n  },\n  getters: {\n    cryptos(state) {\n      return state.cryptos;\n    },\n  },\n  mutations: {\n    ADD_CRYPTO(state, payload) {\n      state.cryptos = payload;\n    },\n    ADD_CRYPTO_VALUES(state, payload) {\n      state.cryptoValues = payload;\n    },\n  },\n  actions: {\n    async getCryptoCurrencies({ commit }) {\n      const { data } = await axios.get(\"http://localhost:8080/api-v1/currency\");\n      console.log(\"data\", data);\n      if (data.status === 200) {\n        commit(\"ADD_CRYPTO\", data.result);\n        localStorage.setItem(\"cryptosAll\", JSON.stringify(data.result));\n        localStorage.setItem(\"selectCurrency\", JSON.stringify(\"Bitcoin BTC\"));\n        return data.result;\n      }\n    },\n    async getCryptocurrenciesValues({ commit }) {\n      const { data } = await axios.get(\n        \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,USDT,USDC,RUB&tsyms=USD,RUB,BTC,USDT,USDC\",\n      );\n      commit(\"ADD_CRYPTO_VALUES\", data);\n    },\n  },\n  modules: {},\n});\n"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;EAC5BC,KAAK,EAAE;IACLC,OAAO,EAAE,EADJ;IAELC,YAAY,EAAE;EAFT,CADqB;EAK5BC,OAAO,EAAE;IACPF,OADO,mBACCD,KADD,EACQ;MACb,OAAOA,KAAK,CAACC,OAAb;IACD;EAHM,CALmB;EAU5BG,SAAS,EAAE;IACTC,UADS,sBACEL,KADF,EACSM,OADT,EACkB;MACzBN,KAAK,CAACC,OAAN,GAAgBK,OAAhB;IACD,CAHQ;IAITC,iBAJS,6BAISP,KAJT,EAIgBM,OAJhB,EAIyB;MAChCN,KAAK,CAACE,YAAN,GAAqBI,OAArB;IACD;EANQ,CAViB;EAkB5BE,OAAO,EAAE;IACDC,mBADC,qCAC+B;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAVC,MAAU,QAAVA,MAAU;gBAAA;gBAAA,OACbb,KAAK,CAACc,GAAN,CAAU,uCAAV,CADa;;cAAA;gBAAA;gBAC5BC,IAD4B,oBAC5BA,IAD4B;gBAEpCC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;;gBAFoC,MAGhCA,IAAI,CAACG,MAAL,KAAgB,GAHgB;kBAAA;kBAAA;gBAAA;;gBAIlCL,MAAM,CAAC,YAAD,EAAeE,IAAI,CAACI,MAApB,CAAN;gBACAC,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeR,IAAI,CAACI,MAApB,CAAnC;gBACAC,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCC,IAAI,CAACC,SAAL,CAAe,aAAf,CAAvC;gBANkC,iCAO3BR,IAAI,CAACI,MAPsB;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IASrC,CAVM;IAWDK,yBAXC,4CAWqC;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAVX,MAAU,SAAVA,MAAU;gBAAA;gBAAA,OACnBb,KAAK,CAACc,GAAN,CACrB,2GADqB,CADmB;;cAAA;gBAAA;gBAClCC,IADkC,qBAClCA,IADkC;gBAI1CF,MAAM,CAAC,mBAAD,EAAsBE,IAAtB,CAAN;;cAJ0C;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAK3C;EAhBM,CAlBmB;EAoC5BU,OAAO,EAAE;AApCmB,CAAf,CAAf"},"metadata":{},"sourceType":"module"}