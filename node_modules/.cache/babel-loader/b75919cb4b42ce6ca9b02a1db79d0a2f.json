{"ast":null,"code":"import _regeneratorRuntime from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport register from \"./register\";\nimport authorization from \"./authorization\";\nimport review from \"./review\";\nimport contact from \"./contact\";\nimport currencyService from \"../services/CurrencyService\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    cryptos: []\n  },\n  mutations: {\n    ADD_CRYPTO: function ADD_CRYPTO(state, payload) {\n      state.cryptos = payload;\n    }\n  },\n  actions: {\n    getCryptoCurrencies: function getCryptoCurrencies(_ref) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit, _yield$currencyServic, data;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return currencyService.getCurrency();\n\n              case 3:\n                _yield$currencyServic = _context.sent;\n                data = _yield$currencyServic.data;\n\n                if (!(data.status === 200)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                commit(\"ADD_CRYPTO\", data.result.sort(function (a, b) {\n                  return a.id - b.id;\n                }));\n                localStorage.setItem(\"cryptosAll\", JSON.stringify(data.result));\n                localStorage.setItem(\"selectCurrency\", JSON.stringify(\"Bitcoin BTC\"));\n                return _context.abrupt(\"return\", data.result);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  modules: {\n    authorization: authorization,\n    register: register,\n    review: review,\n    contact: contact\n  }\n});","map":{"version":3,"names":["Vue","Vuex","register","authorization","review","contact","currencyService","use","Store","state","cryptos","mutations","ADD_CRYPTO","payload","actions","getCryptoCurrencies","commit","getCurrency","data","status","result","sort","a","b","id","localStorage","setItem","JSON","stringify","modules"],"sources":["C:/Job/work/365-change/frontend/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nimport register from \"./register\";\nimport authorization from \"./authorization\";\nimport review from \"./review\";\nimport contact from \"./contact\";\n\nimport currencyService from \"../services/CurrencyService\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    cryptos: [],\n  },\n  mutations: {\n    ADD_CRYPTO(state, payload) {\n      state.cryptos = payload;\n    },\n  },\n  actions: {\n    async getCryptoCurrencies({ commit }) {\n      const { data } = await currencyService.getCurrency();\n      if (data.status === 200) {\n        commit(\n          \"ADD_CRYPTO\",\n          data.result.sort((a, b) => {\n            return a.id - b.id;\n          }),\n        );\n        localStorage.setItem(\"cryptosAll\", JSON.stringify(data.result));\n        localStorage.setItem(\"selectCurrency\", JSON.stringify(\"Bitcoin BTC\"));\n        return data.result;\n      }\n    },\n  },\n  modules: {\n    authorization,\n    register,\n    review,\n    contact,\n  },\n});\n"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,eAAP,MAA4B,6BAA5B;AAEAN,GAAG,CAACO,GAAJ,CAAQN,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACO,KAAT,CAAe;EAC5BC,KAAK,EAAE;IACLC,OAAO,EAAE;EADJ,CADqB;EAI5BC,SAAS,EAAE;IACTC,UADS,sBACEH,KADF,EACSI,OADT,EACkB;MACzBJ,KAAK,CAACC,OAAN,GAAgBG,OAAhB;IACD;EAHQ,CAJiB;EAS5BC,OAAO,EAAE;IACDC,mBADC,qCAC+B;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAVC,MAAU,QAAVA,MAAU;gBAAA;gBAAA,OACbV,eAAe,CAACW,WAAhB,EADa;;cAAA;gBAAA;gBAC5BC,IAD4B,yBAC5BA,IAD4B;;gBAAA,MAEhCA,IAAI,CAACC,MAAL,KAAgB,GAFgB;kBAAA;kBAAA;gBAAA;;gBAGlCH,MAAM,CACJ,YADI,EAEJE,IAAI,CAACE,MAAL,CAAYC,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ,EAAU;kBACzB,OAAOD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAhB;gBACD,CAFD,CAFI,CAAN;gBAMAC,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeV,IAAI,CAACE,MAApB,CAAnC;gBACAK,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCC,IAAI,CAACC,SAAL,CAAe,aAAf,CAAvC;gBAVkC,iCAW3BV,IAAI,CAACE,MAXsB;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAarC;EAdM,CATmB;EAyB5BS,OAAO,EAAE;IACP1B,aAAa,EAAbA,aADO;IAEPD,QAAQ,EAARA,QAFO;IAGPE,MAAM,EAANA,MAHO;IAIPC,OAAO,EAAPA;EAJO;AAzBmB,CAAf,CAAf"},"metadata":{},"sourceType":"module"}