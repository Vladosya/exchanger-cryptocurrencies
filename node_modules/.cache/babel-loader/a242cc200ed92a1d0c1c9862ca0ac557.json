{"ast":null,"code":"import _regeneratorRuntime from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Job/work/365-change/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { minLength, required, email } from \"vuelidate/lib/validators\";\nexport default {\n  name: \"rule-view\",\n  created: function created() {\n    if (localStorage.getItem(\"token\")) {\n      this.personIsAuth = true;\n    } else {\n      this.personIsAuth = false;\n    }\n  },\n  data: function data() {\n    return {\n      personIsAuth: false,\n      formAuthorization: {\n        email: \"\",\n        password: \"\"\n      },\n      isDisabledBtnSubmit: false,\n      minLengthText: \"Минимальная длина 8 символов!\",\n      popupOptions: {\n        authorizationResult: \"\",\n        popupInfo: false,\n        popupText: \"\",\n        popupBtn: \"\"\n      }\n    };\n  },\n  methods: {\n    status: function status(validation) {\n      return {\n        \"is-invalid\": validation.$error\n      };\n    },\n    authorizationSubmitForm: function authorizationSubmitForm() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var formData, resultAuthorization;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.$v.$touch();\n\n                if (!_this.$v.$invalid) {\n                  _context.next = 5;\n                  break;\n                }\n\n                console.log(\"Error\");\n                _context.next = 18;\n                break;\n\n              case 5:\n                console.log(\"Success\");\n                _context.prev = 6;\n                _this.isDisabledBtnSubmit = true;\n                formData = {\n                  email: _this.formAuthorization.email,\n                  password: _this.formAuthorization.password\n                };\n                _context.next = 11;\n                return _this.$store.dispatch(\"authorization\", formData);\n\n              case 11:\n                resultAuthorization = _context.sent;\n\n                if (resultAuthorization.message === \"Пользователь успешно авторизовался\") {\n                  _this.popupOptions.authorizationResult = resultAuthorization.message;\n                  _this.popupOptions.popupInfo = true;\n                  _this.popupOptions.popupText = \"Вы успешно авторизовались\";\n                  _this.popupOptions.popupBtn = \"На домашнюю страницу\";\n                  _this.isDisabledBtnSubmit = false;\n                } else if (resultAuthorization.message === \"Неправильный логин или пароль\") {\n                  _this.popupOptions.authorizationResult = resultAuthorization.message;\n                  _this.popupOptions.popupInfo = true;\n                  _this.popupOptions.popupText = \"Неправильный логин или пароль\";\n                  _this.popupOptions.popupBtn = \"Попробовать ещё раз\";\n                  _this.isDisabledBtnSubmit = false;\n                } else if (resultAuthorization.message === \"Пользователь с такой почтой не найден\") {\n                  _this.popupOptions.authorizationResult = resultAuthorization.message;\n                  _this.popupOptions.popupInfo = true;\n                  _this.popupOptions.popupText = \"Пользователь с такой почтой не найден\";\n                  _this.popupOptions.popupBtn = \"Попробовать ещё раз\";\n                  _this.isDisabledBtnSubmit = false;\n                }\n\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](6);\n                console.log(\"Error in authorizationSubmitForm in LoginView func -->\", _context.t0);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[6, 15]]);\n      }))();\n    },\n    goAfterAuthorization: function goAfterAuthorization() {\n      if (this.popupOptions.authorizationResult === \"Пользователь успешно авторизовался\") {\n        this.popupOptions.popupInfo = false;\n        this.$router.push(\"/\");\n        this.$router.go(0);\n      } else if (this.popupOptions.authorizationResult === \"Неправильный логин или пароль\") {\n        this.popupOptions.popupInfo = false;\n      } else if (this.popupOptions.authorizationResult === \"Пользователь с такой почтой не найден\") {\n        this.popupOptions.popupInfo = false;\n      }\n    }\n  },\n  validations: {\n    formAuthorization: {\n      email: {\n        email: email,\n        required: required\n      },\n      password: {\n        required: required,\n        minLength: minLength(8)\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0UA;AAEA;EACAA,iBADA;EAEAC,OAFA,qBAEA;IACA;MACA;IACA,CAFA,MAEA;MACA;IACA;EACA,CARA;EASAC,IATA,kBASA;IACA;MACAC,mBADA;MAEAC;QACAC,SADA;QAEAC;MAFA,CAFA;MAMAC,0BANA;MAOAC,8CAPA;MAQAC;QACAC,uBADA;QAEAC,gBAFA;QAGAC,aAHA;QAIAC;MAJA;IARA;EAeA,CAzBA;EA0BAC;IACAC,MADA,kBACAC,UADA,EACA;MACA;QACA;MADA;IAGA,CALA;IAMAC,uBANA,qCAMA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACA;;gBADA,KAEA,iBAFA;kBAAA;kBAAA;gBAAA;;gBAGAC;gBAHA;gBAAA;;cAAA;gBAKAA;gBALA;gBAOA;gBACAC,QARA,GAQA;kBACAd,oCADA;kBAEAC;gBAFA,CARA;gBAAA;gBAAA,OAYA,sBACA,eADA,EAEAa,QAFA,CAZA;;cAAA;gBAYAC,mBAZA;;gBAiBA,IACAA,oEADA,EAEA;kBACA;kBACA;kBACA;kBACA;kBACA;gBACA,CARA,MAQA,IACAA,+DADA,EAEA;kBACA;kBACA;kBACA;kBACA;kBACA;gBACA,CARA,MAQA,IACAA,gCACA,uCAFA,EAGA;kBACA;kBACA;kBACA,+BACA,uCADA;kBAEA;kBACA;gBACA;;gBA3CA;gBAAA;;cAAA;gBAAA;gBAAA;gBA6CAF,YACA,wDADA;;cA7CA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAmDA,CAzDA;IA0DAG,oBA1DA,kCA0DA;MACA,IACA,0CACA,oCAFA,EAGA;QACA;QACA;QACA;MACA,CAPA,MAOA,IACA,0CACA,+BAFA,EAGA;QACA;MACA,CALA,MAKA,IACA,0CACA,uCAFA,EAGA;QACA;MACA;IACA;EA7EA,CA1BA;EAyGAC;IACAlB;MACAC;QACAA,YADA;QAEAkB;MAFA,CADA;MAKAjB;QACAiB,kBADA;QAEAC;MAFA;IALA;EADA;AAzGA","names":["name","created","data","personIsAuth","formAuthorization","email","password","isDisabledBtnSubmit","minLengthText","popupOptions","authorizationResult","popupInfo","popupText","popupBtn","methods","status","validation","authorizationSubmitForm","console","formData","resultAuthorization","goAfterAuthorization","validations","required","minLength"],"sourceRoot":"src/views","sources":["RuleView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"main-rules\">\r\n      <div class=\"main-rules-left\">\r\n        <div class=\"container-rules\">\r\n          <div class=\"main-rules-left__title\">ПРАВИЛА ОБМЕНА</div>\r\n          <div class=\"main-rules-left__content\">\r\n            <div class=\"main-rules-left__content_title\">\r\n              1. Стороны соглашения.\r\n            </div>\r\n            <div class=\"main-rules-left__content_text\">\r\n              Договор заключается между интернет сервисом по обмену криптовалюты\r\n              365change.biz, далее Исполнитель, — с одной стороны, и Заказчик, в\r\n              лице того, кто воспользовался услугами Исполнителя, — с другой\r\n              стороны.\r\n            </div>\r\n            <div class=\"main-rules-left__content_title\">\r\n              2. Список терминов.\r\n            </div>\r\n            <div class=\"main-rules-left__content_text\">\r\n              2.1. Обмен титульных знаков — автоматизированный продукт интернет\r\n              обслуживания, который предоставляется Исполнителем на основании\r\n              данных правил. <br />\r\n              2.2. Заказчик — физическое лицо, соглашающееся с условиями\r\n              Исполнителя и данного соглашения, к которому присоединяется.\r\n              <br />\r\n              2.3. Титульный знак — условная единица той или иной платежной\r\n              системы, которая соответствует расчетам электронных систем и\r\n              обозначает объем прав, соответствующих договору системы\r\n              электронной оплаты и ее Заказчика. <br />\r\n              2.4. Заявка — сведения, переданные Заказчиком для использования\r\n              средств Исполнителя в электронном виде и свидетельствующие о том,\r\n              что он принимает условия пользования сервисом, которые\r\n              предлагаются Исполнителем в данной заявке.\r\n            </div>\r\n            <div class=\"main-rules-left__content_title\">\r\n              3. Условия соглашения.\r\n            </div>\r\n            <div class=\"main-rules-left__content_text\">\r\n              Данные правила считаются организованными за счет условий\r\n              общественной оферты, которая образуется во время подачи Заказчиком\r\n              заявки и является одной из главных составляющих настоящего\r\n              договора. Общественной офертой именуются отображаемые исполнителем\r\n              сведения об условиях подачи заявки. Главным составляющим\r\n              общественной оферты являются действия, сделанные в завершении\r\n              подачи заявки Заказчиком и говорящие о его точных намерениях\r\n              совершить сделку на условиях предложенных Исполнителем перед\r\n              завершением данной заявки. Время, дата, и параметры заявки\r\n              создаются Исполнителем автоматически в момент окончания\r\n              формирования данной заявки. Предложение должно приняться\r\n              Заказчиком в течение 24 часов от окончания формирования заявки.\r\n              Договор по обслуживанию вступает в силу с момента поступления\r\n              титульных знаков в полном размере, указанном в заявке, от\r\n              Заказчика на реквизиты Исполнителя. Операции с титульными знаками\r\n              учитываются согласно правилам, регламенту и формату электронных\r\n              систем по расчетам. Договор действителен в течение срока , который\r\n              устанавливается с момента подачи заявки до расторжения по\r\n              инициативе одной из сторон.\r\n            </div>\r\n            <div class=\"main-rules-left__content_title\">\r\n              4. Предмет соглашения.\r\n            </div>\r\n            <div class=\"main-rules-left__content_text\">\r\n              Путем использования технических методов Исполнитель обязуется\r\n              выполнять обмен титульных знаков за комиссионное вознаграждение от\r\n              Заказчика, после подачи данным лицом заявки и совершает это путем\r\n              продажи титульных знаков лицам, желающим их приобрести по сумме,\r\n              указанной не ниже, чем в заявке поданной Заказчиком. Денежные\r\n              средства Исполнитель обязуется переводить на указанные Заказчиком\r\n              реквизиты. В случае возникновения во время обмена прибыли, она\r\n              остается на счету Исполнителя, как дополнительная выгода и премия\r\n              за комиссионные услуги.\r\n            </div>\r\n            <div class=\"main-rules-left__content_title\">5. В дополнение.</div>\r\n            <div class=\"main-rules-left__content_text\">\r\n              5.1. Если на счет Исполнителя поступает сумма, отличающаяся от\r\n              указанной в заявке, Исполнитель делает перерасчет, который\r\n              соответствует фактическому поступлению титульных знаков. Если\r\n              данная сумма превышает указанную в заявке более чем на 10%,\r\n              Исполнитель расторгает договор в одностороннем порядке и все\r\n              средства возвращаются на реквизиты Заказчика, с учетом вычтенной\r\n              суммы на комиссионные расходы во время перевода. <br />\r\n              5.2. В случае, когда титульные знаки не отправляются Исполнителем\r\n              на указанные реквизиты Заказчика в течение 24 часов, Заказчик\r\n              имеет полное право потребовать расторжение соглашения и\r\n              аннулировать свою заявку, тем самым совершая возврат титульных\r\n              знаков на свой счет в полном объеме. Заявка на расторжение\r\n              соглашения и возврата титульных знаков выполняется Исполнителем в\r\n              том случае, если денежные средства еще не были переведены на\r\n              указанные реквизиты Заказчика. В случае аннулирования договора,\r\n              возврат электронной валюты производится в течение 24 часов с\r\n              момента получения требовании о расторжении договора. Если задержки\r\n              при возврате возникли не по вине Исполнителя, он не несет за них\r\n              ответственности. <br />\r\n              5.3. Если титульные знаки не поступаеют от Заказчика на счет\r\n              Исполнителя в течение указанного срока, с момента подачи заявки\r\n              Заказчиком, соглашение между сторонами расторгается Исполнителем с\r\n              одной стороны, так как договор не вступает в действие. Заказчик\r\n              может об этом не уведомляться. Если титульные знаки поступает на\r\n              реквизиты Исполнителя после указанного срока, то такие средства\r\n              переводятся обратно на счет Заказчика, причем все комиссионные\r\n              расходы, связанные с переводом, вычитаются из данных средств.\r\n              <br />\r\n              5.4. Если происходит задержка перевода средств на реквизиты,\r\n              указанные Заказчиком, по вине расчетной системы, Исполнитель не\r\n              несет ответственности за ущерб, возникающий в результате долгого\r\n              поступления денежных средств. В этом случае Заказчик должен\r\n              согласиться с тем, что все претензии будут предъявляться к\r\n              расчетной системе, а Исполнитель оказывает свою помощь по мере\r\n              своих возможностей в рамках закона. <br />\r\n              5.5. В случае обнаружения подделки коммуникационных потоков или\r\n              оказания воздействия, с целью ухудшить работу Исполнителя, а\r\n              именно его программного кода, заявка приостанавливается, а\r\n              переведенные средства подвергаются перерасчету в соответствии с\r\n              действующим соглашением. Если Заказчик не согласен с перерасчетом,\r\n              он имеет полное право расторгнуть договор и титульные знаки\r\n              отправятся на реквизиты указанные Заказчиком. <br />\r\n              5.6. В случае пользования услугами Исполнителя, Заказчик полностью\r\n              соглашается с тем, что Исполнитель несет ограниченную\r\n              ответственность соответствующую рамкам настоящих правил полученных\r\n              титульных знаков и не дает дополнительных гарантий Заказчику, а\r\n              также не несет перед ним дополнительной ответственности.\r\n              Соответственно Заказчик не несет дополнительной ответственности\r\n              перед Исполнителем. <br />\r\n              5.7. Заказчик обязуется выполнять нормы соответствующие\r\n              законодательству, а также не подделывать коммуникационные потоки и\r\n              не создавать препятствий для нормальной работы программного кода\r\n              Исполнителя. <br />\r\n              5.8.Исполнитель не несет ответственности за ущерб и последствия\r\n              при ошибочном переводе электронной валюты в том случае, если\r\n              Заказчик указал при подаче заявки неверные реквизиты. <br />\r\n              5.9. Уважаемые пользователи, администратор обменного пункта может\r\n              потребовать верификацию пользователя и заблокировать средства с\r\n              последующим возвратом в том случае если транзакция вызывает\r\n              сомнение в ее происхождения: не допустимый источник отправки,\r\n              криптовалюта полученная мошенническим путем. Средства могут быть\r\n              возвращены только после верификации, заблокированы на\r\n              неопределенный срок, а также изъяты по запросу правоохранительных\r\n              органов. <br />\r\n              Полная верификация — видео селфи с паспортом, вход в кошелек с\r\n              отправкой на адрес обменного пункта, заявкой и проговаривание\r\n              голосом номера заявки и реквизитов для получения денежных средств.\r\n              <br />\r\n              Частичная верификация — видео или скриншот экрана с отправкой\r\n              криптовалюты на адрес обменного пункта. <br />\r\n              Данное правило является исключительно для предотвращения\r\n              мошенническим действиям, таким как сдвоенным заявкам, двойными\r\n              транзакциями, оплачиванием и не отправлением криптовалюты на адрес\r\n              обменного пункта. <br />\r\n              Данное правило необходимо в первую очередь для защиты\r\n              добросовестных пользователей и предотвращения мошеннических\r\n              действий. <br />\r\n              5.10. Отправляйте точное количество криптовалюты, что указали в\r\n              заявке. В противном случае для решения вопроса потребуется\r\n              верификация платежа, после верификации возможен возврат\r\n              криптовалюты за вычетом комиссии за отправку либо обмен с вычетом\r\n              комиссии 5% из суммы обмена.\r\n            </div>\r\n            <div class=\"main-rules-left__content_title\">\r\n              6. Гарантийный срок\r\n            </div>\r\n            <div class=\"main-rules-left__content_text\">\r\n              В течение 24 часов с момента исполнения обмена титульных знаков\r\n              Исполнитель дает гарантию на оказываемые услуги при условии, если\r\n              не оговорены иные сроки.\r\n            </div>\r\n            <div class=\"main-rules-left__content_title\">\r\n              7. Непредвиденные обстоятельства.\r\n            </div>\r\n            <div class=\"main-rules-left__content_text\">\r\n              7.1 В случае, когда в процессе обработки заявки Заказчика\r\n              возникают непредвиденные обстоятельства, способствующие\r\n              невыполнению Исполнителем условий договора, сроки выполнения\r\n              заявки переносятся на соответствующий срок длительности\r\n              форс-мажора. За просроченные обязательства Исполнитель\r\n              ответственности не несет. <br /><br />\r\n              7.2 Обменный пункт оставляет за собой права отмены сделки,\r\n              пользователь не может опираясь на основание выход обменного пункта\r\n              за регламент времени или при росте или падении в сторону выгодную\r\n              пользователю отменить операцию по своему желанию.\r\n            </div>\r\n            <div class=\"main-rules-left__content_title\">\r\n              8. Форма соглашения.\r\n            </div>\r\n            <div class=\"main-rules-left__content_text\">\r\n              Данное соглашение обе стороны, в лице Исполнителя и Заказчика,\r\n              принимают как равноценный по юридической силе договор,\r\n              обозначенный в письменной форме.\r\n            </div>\r\n            <div class=\"main-rules-left__content_title\">\r\n              9. Претензии и споры.\r\n            </div>\r\n            <div class=\"main-rules-left__content_text\">\r\n              Претензии по настоящему соглашению принимаются Исполнителем в\r\n              форме электронного письма, в котором Заказчик указывает суть\r\n              претензии. Данное письмо отправляется на указанные на сайте\r\n              реквизиты Исполнителя.\r\n            </div>\r\n            <div class=\"main-rules-left__content_title\">\r\n              10. Проведение обменных операций.\r\n            </div>\r\n            <div class=\"main-rules-left__content_text\">\r\n              10.1.Категорически запрещается пользоваться услугами Исполнителя\r\n              для проведения незаконных переводов и мошеннических действий. При\r\n              заключении настоящего договора, Заказчик обязуется выполнять эти\r\n              требования и в случае мошенничества нести уголовную\r\n              ответственность, установленную законодательством на данный момент.\r\n              <br />\r\n              10.2. В случае невозможности выполнения заявки автоматически, по\r\n              не зависящим от Исполнителя обстоятельствам, таким как отсутствие\r\n              связи, нехватка средств, или же ошибочные данные Заказчика,\r\n              средства поступают на счет в течение последующих 24 часов или же\r\n              возвращается на реквизиты Заказчика за вычетом комиссионных\r\n              расходов. <br />\r\n              10.3.По первому требованию Исполнитель вправе передавать\r\n              информацию о переводе электронной валюты правоохранительным\r\n              органам, администрации расчетных систем, а также жертвам\r\n              неправомерных действий, пострадавшим в результате доказанного\r\n              судебными органами мошенничества. <br />\r\n              10.4. Заказчик обязуется представить все документы, удостоверяющие\r\n              его личность, в случае подозрения о мошенничестве и отмывании\r\n              денег. <br />\r\n              10.5. Заказчик обязуется не вмешиваться в работу Исполнителя и не\r\n              наносить урон его программной и аппаратной части, а также Заказчик\r\n              обязуется передавать точные сведения для обеспечения выполнения\r\n              Исполнителем всех условий договора.\r\n            </div>\r\n            <div class=\"main-rules-left__content_title\">\r\n              11. Персональные данные.\r\n            </div>\r\n            <div class=\"main-rules-left__content_text\">\r\n              Заказчик, используя интернет сервис Исполнителя, соглашается с\r\n              обработкой и хранением своих персональных данных Исполнителем, в\r\n              соответствии с требованиями Федерального закона от 27.07.2006 г. №\r\n              152-ФЗ \"О персональных данных\" (с изменениями и дополнениями).\r\n            </div>\r\n            <div class=\"main-rules-left__content_title\">\r\n              12. Отказ от обязательств.\r\n            </div>\r\n            <div class=\"main-rules-left__content_text\">\r\n              Исполнитель имеет право отказа на заключение договора и выполнение\r\n              заявки, причем без объяснения причин. Данный пункт применяется по\r\n              отношению к любому клиенту.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div v-show=\"!personIsAuth\" class=\"main-rules-right\">\r\n        <div class=\"main-rules-right__title\">Авторизация</div>\r\n        <form class=\"main-rules-right__form\">\r\n          <div class=\"main-rules-right__form_login\">\r\n            <input\r\n              type=\"text\"\r\n              class=\"main-rules-right__form_login_input\"\r\n              @blur=\"$v.formAuthorization.email.$touch()\"\r\n              v-model.trim=\"formAuthorization.email\"\r\n              placeholder=\"Email\"\r\n            />\r\n            <div\r\n              class=\"invalid-feed\"\r\n              v-if=\"\r\n                $v.formAuthorization.email.$error ||\r\n                ($v.formAuthorization.email.$dirty &&\r\n                  !$v.formAuthorization.email.required)\r\n              \"\r\n            >\r\n              Необходимо указать email\r\n            </div>\r\n            <div class=\"invalid-feed\" v-if=\"!$v.formAuthorization.email.email\">\r\n              Пожалуйста введите Email адрес\r\n            </div>\r\n          </div>\r\n          <div class=\"main-rules-right__form_password\">\r\n            <input\r\n              type=\"password\"\r\n              class=\"main-rules-right__form_password_input\"\r\n              @blur=\"$v.formAuthorization.password.$touch()\"\r\n              v-model.trim=\"formAuthorization.password\"\r\n              placeholder=\"Пароль\"\r\n            />\r\n            <div\r\n              class=\"invalid-feed\"\r\n              v-if=\"!$v.formAuthorization.password.minLength\"\r\n            >\r\n              {{ minLengthText }}\r\n            </div>\r\n            <div\r\n              class=\"invalid-feed\"\r\n              v-if=\"\r\n                $v.formAuthorization.password.$error ||\r\n                ($v.formAuthorization.password.$dirty &&\r\n                  !$v.formAuthorization.password.required)\r\n              \"\r\n            >\r\n              Необходимо указать пароль\r\n            </div>\r\n          </div>\r\n          <div class=\"main-rules-right__form_options\">\r\n            <router-link to=\"/recovery\">Забыли пароль?</router-link>\r\n            <router-link to=\"/register\">Регистрация</router-link>\r\n          </div>\r\n          <div class=\"main-rules-right__form_btn\">\r\n            <button\r\n              type=\"submit\"\r\n              :disabled=\"isDisabledBtnSubmit\"\r\n              @click.prevent=\"authorizationSubmitForm\"\r\n            >\r\n              Войти\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"popupOptions.popupInfo\" class=\"popup-container\">\r\n      <div class=\"popup-information\">\r\n        <div class=\"popup-information__title\">Авторизация</div>\r\n        <div class=\"popup-information__text\">\r\n          {{ popupOptions.popupText }}\r\n        </div>\r\n        <div class=\"popup-information__btn\">\r\n          <button @click=\"goAfterAuthorization\">\r\n            {{ popupOptions.popupBtn }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { minLength, required, email } from \"vuelidate/lib/validators\";\r\n\r\nexport default {\r\n  name: \"rule-view\",\r\n  created() {\r\n    if (localStorage.getItem(\"token\")) {\r\n      this.personIsAuth = true;\r\n    } else {\r\n      this.personIsAuth = false;\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      personIsAuth: false,\r\n      formAuthorization: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      isDisabledBtnSubmit: false,\r\n      minLengthText: \"Минимальная длина 8 символов!\",\r\n      popupOptions: {\r\n        authorizationResult: \"\",\r\n        popupInfo: false,\r\n        popupText: \"\",\r\n        popupBtn: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    status(validation) {\r\n      return {\r\n        \"is-invalid\": validation.$error,\r\n      };\r\n    },\r\n    async authorizationSubmitForm() {\r\n      this.$v.$touch();\r\n      if (this.$v.$invalid) {\r\n        console.log(\"Error\");\r\n      } else {\r\n        console.log(\"Success\");\r\n        try {\r\n          this.isDisabledBtnSubmit = true;\r\n          const formData = {\r\n            email: this.formAuthorization.email,\r\n            password: this.formAuthorization.password,\r\n          };\r\n          const resultAuthorization = await this.$store.dispatch(\r\n            \"authorization\",\r\n            formData\r\n          );\r\n\r\n          if (\r\n            resultAuthorization.message === \"Пользователь успешно авторизовался\"\r\n          ) {\r\n            this.popupOptions.authorizationResult = resultAuthorization.message;\r\n            this.popupOptions.popupInfo = true;\r\n            this.popupOptions.popupText = \"Вы успешно авторизовались\";\r\n            this.popupOptions.popupBtn = \"На домашнюю страницу\";\r\n            this.isDisabledBtnSubmit = false;\r\n          } else if (\r\n            resultAuthorization.message === \"Неправильный логин или пароль\"\r\n          ) {\r\n            this.popupOptions.authorizationResult = resultAuthorization.message;\r\n            this.popupOptions.popupInfo = true;\r\n            this.popupOptions.popupText = \"Неправильный логин или пароль\";\r\n            this.popupOptions.popupBtn = \"Попробовать ещё раз\";\r\n            this.isDisabledBtnSubmit = false;\r\n          } else if (\r\n            resultAuthorization.message ===\r\n            \"Пользователь с такой почтой не найден\"\r\n          ) {\r\n            this.popupOptions.authorizationResult = resultAuthorization.message;\r\n            this.popupOptions.popupInfo = true;\r\n            this.popupOptions.popupText =\r\n              \"Пользователь с такой почтой не найден\";\r\n            this.popupOptions.popupBtn = \"Попробовать ещё раз\";\r\n            this.isDisabledBtnSubmit = false;\r\n          }\r\n        } catch (error) {\r\n          console.log(\r\n            \"Error in authorizationSubmitForm in LoginView func -->\",\r\n            error\r\n          );\r\n        }\r\n      }\r\n    },\r\n    goAfterAuthorization() {\r\n      if (\r\n        this.popupOptions.authorizationResult ===\r\n        \"Пользователь успешно авторизовался\"\r\n      ) {\r\n        this.popupOptions.popupInfo = false;\r\n        this.$router.push(\"/\");\r\n        this.$router.go(0);\r\n      } else if (\r\n        this.popupOptions.authorizationResult ===\r\n        \"Неправильный логин или пароль\"\r\n      ) {\r\n        this.popupOptions.popupInfo = false;\r\n      } else if (\r\n        this.popupOptions.authorizationResult ===\r\n        \"Пользователь с такой почтой не найден\"\r\n      ) {\r\n        this.popupOptions.popupInfo = false;\r\n      }\r\n    },\r\n  },\r\n  validations: {\r\n    formAuthorization: {\r\n      email: {\r\n        email,\r\n        required,\r\n      },\r\n      password: {\r\n        required,\r\n        minLength: minLength(8),\r\n      },\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  max-width: 960px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.popup-container {\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.popup-information {\r\n  padding: 15px 35px;\r\n  width: 500px;\r\n  height: 300px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 5px #707070;\r\n}\r\n\r\n.popup-information__title {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 21px;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n}\r\n\r\n.popup-information__text {\r\n  margin-top: 25px;\r\n  padding: 0 24px;\r\n  text-align: center;\r\n}\r\n\r\n.popup-information__btn {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n}\r\n\r\n.popup-information__btn > button {\r\n  cursor: pointer;\r\n  transition: all 0.3s linear;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  background: #e4e4e4;\r\n  height: 40px;\r\n  font: 100 14px/40px \"Segoe UI\", serif;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  padding: 0 30px;\r\n  text-decoration: none;\r\n}\r\n\r\n.popup-information__btn > button:hover {\r\n  background-color: #ffc512;\r\n}\r\n\r\n//\r\n.main-rules {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 0 0 30px;\r\n  padding: 40px 30px 25px 30px;\r\n}\r\n\r\n.container-rules {\r\n  max-width: 610px;\r\n}\r\n\r\n.main-rules-left__title {\r\n  margin: 0 0 25px;\r\n  font: 300 23px/26px \"Segoe UI\";\r\n  color: #929292;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.main-rules-left__content_title {\r\n  font: 12px/1.5em \"Segoe UI\", sans-serif;\r\n  color: #545454;\r\n  padding: 0 0 20px 0;\r\n  font-weight: 600;\r\n}\r\n\r\n.main-rules-left__content_text {\r\n  font: 12px/1.5em \"Segoe UI\", sans-serif;\r\n  color: #545454;\r\n  padding: 0 0 20px 0;\r\n}\r\n\r\n// Right\r\n.main-rules-right__title {\r\n  margin: 0 -30px 0;\r\n  padding: 20px 30px 25px;\r\n  font: 600 18px/20px \"Segoe UI\";\r\n  color: #929292;\r\n}\r\n\r\n.main-rules-right__form_login {\r\n  padding: 0 0 20px 0;\r\n}\r\n\r\n.main-rules-right__form_login_input {\r\n  outline: none;\r\n  border: 1px solid #e2e2e2;\r\n  background: #fff;\r\n  opacity: 0.75;\r\n  height: 40px;\r\n  width: 200px;\r\n  padding: 0 10px;\r\n  transition: all 0.3s linear;\r\n  box-sizing: border-box;\r\n  color: #545454;\r\n  font: 13px/40px \"Segoe UI\", sans-serif;\r\n}\r\n\r\n.main-rules-right__form_login_input:focus {\r\n  border: 1px solid #00cccb;\r\n}\r\n\r\n.main-rules-right__form_password {\r\n  padding: 0 0 20px 0;\r\n}\r\n\r\n.main-rules-right__form_password_input {\r\n  outline: none;\r\n  border: 1px solid #e2e2e2;\r\n  background: #fff;\r\n  opacity: 0.75;\r\n  height: 40px;\r\n  width: 200px;\r\n  padding: 0 10px;\r\n  transition: all 0.3s linear;\r\n  box-sizing: border-box;\r\n  color: #545454;\r\n  font: 13px/40px \"Segoe UI\", sans-serif;\r\n}\r\n\r\n.main-rules-right__form_password_input:focus {\r\n  border: 1px solid #00cccb;\r\n}\r\n\r\n.main-rules-right__form_options {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.main-rules-right__form_options > a {\r\n  font: 12px/1.5em \"Segoe UI\", sans-serif;\r\n  color: #000;\r\n  text-decoration: none;\r\n}\r\n\r\n.main-rules-right__form_options > a:hover {\r\n  color: #ffc512;\r\n  text-decoration: underline;\r\n}\r\n\r\n.main-rules-right__form_btn {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 15px 20px;\r\n  margin: 20px -30px 0;\r\n}\r\n\r\n.main-rules-right__form_btn > button {\r\n  cursor: pointer;\r\n  transition: all 0.3s linear;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  background: #e4e4e4;\r\n  height: 40px;\r\n  font: 100 14px/40px \"Segoe UI\", serif;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  padding: 0 30px;\r\n  text-decoration: none;\r\n}\r\n\r\n.main-rules-right__form_btn > button:hover {\r\n  background: #ffc512;\r\n}\r\n\r\n.is-invalid {\r\n  font-size: 12px;\r\n  border: 1px solid #dc3545;\r\n}\r\n\r\n.invalid-feed {\r\n  margin-top: 3px;\r\n  font-size: 12px;\r\n  color: #dc3545;\r\n}\r\n\r\n@media (max-width: 926px) {\r\n  .container {\r\n    max-width: 838px;\r\n  }\r\n\r\n  .main-rules {\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n  }\r\n\r\n  .main-rules-right {\r\n    margin-top: 40px;\r\n  }\r\n}\r\n\r\n@media (max-width: 844px) {\r\n  .container {\r\n    max-width: 763px;\r\n  }\r\n}\r\n\r\n@media (max-width: 834px) {\r\n  .container {\r\n    max-width: 754.77px;\r\n  }\r\n}\r\n\r\n@media (max-width: 780px) {\r\n  .container {\r\n    max-width: 705.89px;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .container {\r\n    max-width: 695px;\r\n  }\r\n}\r\n\r\n@media (max-width: 667px) {\r\n  .container {\r\n    max-width: 603px;\r\n  }\r\n}\r\n\r\n@media (max-width: 568px) {\r\n  .container {\r\n    max-width: 514px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .container {\r\n    max-width: 452.5px;\r\n  }\r\n}\r\n\r\n@media (max-width: 428px) {\r\n  .container {\r\n    max-width: 390px;\r\n  }\r\n\r\n  .main-rules-left__title {\r\n    font: 300 20px/26px \"Segoe UI\";\r\n  }\r\n\r\n  .main-rules-left__content_title {\r\n    font: 11px/1.5em \"Segoe UI\", sans-serif;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .main-rules-left__content_text {\r\n    font: 10px/1.5em \"Segoe UI\", sans-serif;\r\n  }\r\n\r\n  .main-rules-right__form_login_input {\r\n    font: 11px/40px \"Segoe UI\", sans-serif;\r\n  }\r\n\r\n  .main-rules-right__form_password_input {\r\n    font: 11px/40px \"Segoe UI\", sans-serif;\r\n  }\r\n\r\n  .main-rules-right__form_options > a {\r\n    font: 11px/1.5em \"Segoe UI\", sans-serif;\r\n  }\r\n}\r\n\r\n@media (max-width: 414px) {\r\n  .container {\r\n    max-width: 380px;\r\n  }\r\n}\r\n\r\n@media (max-width: 390px) {\r\n  .container {\r\n    max-width: 355px;\r\n  }\r\n}\r\n\r\n@media (max-width: 375px) {\r\n  .container-login {\r\n    max-width: 355px;\r\n  }\r\n}\r\n\r\n@media (max-width: 360px) {\r\n  .container {\r\n    max-width: 333px;\r\n  }\r\n\r\n  .main-rules-left__content_title {\r\n    font: 10px/1.5em \"Segoe UI\", sans-serif;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .main-rules-left__content_text {\r\n    font: 9px/1.5em \"Segoe UI\", sans-serif;\r\n  }\r\n}\r\n\r\n@media (max-width: 320px) {\r\n  .container {\r\n    max-width: 300px;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}